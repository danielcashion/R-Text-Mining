library("Wunderground")
library("wunderground")
library("rwunderground")
set_location(zip_code = 07760)
set_location(zip_code = "07760")
Rumson_History <- almanac(location)
location
location()
set_lo
set_location
set_location()
list_
list_airports()
list_states()
alerts(set_location(zip_code = "90210"))
has_api_key()
library("rwunderground")
has_api_key()
set_api_key("949e2fee88ed30ad")
has_ap
has_api_key()
has_api_key
get_api_key()
location()
set_location(zip_code = "07760")
tide(location, key = get_api_key(), raw = FALSE, message = TRUE)
tide(location)
set_location
set_location(zip_code = "07760")
set_location()
set_location(zip_code = "07760")
set_location()
zip_code <- "07760"
set_location(zip_code = zip)
set_location(zip_code = zip_code)
set_location()
set_location(zip_code = zip_code)
tide(location, key = get_api_key(), raw = FALSE, message = TRUE)
alerts(set_location(zip_code = "90210"))
tide(location = set_location(zip_code = "90210"), key = get_api_key(), raw = FALSE, message = TRUE)
tide(location = set_location(zip_code = "90210"), key = get_api_key(), raw = FALSE, message = TRUE))
get_api_key()
location = set_location(zip_code = "90210")
tide()
tide
local_location <- set_location(zip_code = "07760")
rm(location)
tide(location = local_location,     key = get_api_key(), raw = FALSE, message = TRUE)
tide(location = local_location, key = get_api_key(), raw = FALSE, message = TRUE)
almanac(location = loca_lo)
almanac(location = local_location)
astronomy(location = local_location)
base_url()
forecast10day(location = local_location)
forecast10day(location = local_location)
history(location = local_location)
today_history <- history(location = local_location)
ts.plot(today_history$temp)
history_daily(location = local_location)
temp_hist <- history_daily(location = local_location)
head(temp_hist)
dim(temp_hist)
tail(temp_hist)
temp_hist <- history_daily(location = local_location, date="20160101")
dim(temp_hist)
temp_histp[1:3,1:3]
temp_hist[1:3,1:3]
temp_hist <- history_daily(location = local_location, date="20160101", key = get_api_key())
dim(temp_hist)
rm(temp_hist)
get_api_key()
forecast10day(location = local_location, key = get_api_key())
a <- forecast10day(location = local_location, key = get_api_key())
test  <- forecast10day(location = local_location, key = get_api_key())
a <- forecast10day(location = local_location, key = get_api_key())
str(a)
rm(a)
b <- history_daily(locatin = local_location, key = get_api_key(), date = "20150101", message = T)
b <- history_daily(location = local_location, key = get_api_key(), date = "20150101", message = T)
bye <- history_daily(location = local_location, key = get_api_key(), date = "20150101", message = T)
bye <- history_daily(location = local_location, key = get_api_key())
bye <- history_daily(location = local_location, date = "20150101", message = TRUE)
bye <- history_daily(location = local_location, date = "20150101")
history_daily(location = local_location, date = "20150101")
history_daily(location = local_location, date = "20160101")
history_daily(location = local_location, date = "20161006")
history_daily
library("dplyr")
library("countrycode")
library("rwunderground") library("dplyr") library("httr") library("countrycode")
bye <- history_daily(location = local_location, date = "20161006")
history_range (location = local_location, date_start = "20160101", date_end = "20161005", key = get_api_key())
hourly(location = local_location)
hours <- hourly(location = local_location)
dim(hours)
head(hours)
plot(hours$humidity)
plot(hours$humidity, ylab = "Relative Humidity")
plot(hours$humidity, ylab = "Relative Humidity",color = blue)
plot(hours$humidity, ylab = "Relative Humidity",color = "blue")
hourly10day(location = local_location, use_metric = FALSE, key = get_api_key(), raw = FALSE, message = TRUE)
library(weatherData) library(ggplot2) library(scales) library(plyr)
library(weatherData) library(ggplot2) library(scales) library(plyr)
w2015 <- getWeatherForYear("EWR", 2015)
w2013$shortdate <- strftime(w2015$Time, format = "%m-%d")
meanTemp <- ddply(w2015, .(shortdate), summarize, mean_T = mean(TemperatureF)) meanTemp$shortdate <- as.Date(meanTemp$shortdate, format = "%m-%d")
meanTemp <- ddply(w2015, .(shortdate), summarize, mean_T = mean(TemperatureF))
w
w2015
strftime(w2015$Time, format = "%m-%d")
str(w2015)
strftime(w2015$Date, format = "%m-%d")
meanTemp <- ddply(w2015, .(shortdate), summarize, mean_T = mean(TemperatureF))
w2013$shortdate
w2013$shortdate <- strftime(w2015$Date, format = "%m-%d")
w2015$shortdate <- strftime(w2015$Date, format = "%m-%d")
meanTemp <- ddply(w2015, .(shortdate), summarize, mean_T = mean(TemperatureF))
ddply(w2015, .(shortdate), summarize, mean_T = mean(TemperatureF))
str(w2015)
mean(mean_TemperatureF)
?Sys.time
?Sys.timezone()
?Sys.timezone
Sys.getenv("TZ")
options(tz="New York City")
options(tz="America/New York")
?Sys.t
?Sys.time
Sys.time()
Sys.setenv(TZ="EST")
?Sys.set
as.POSIXct(t, tz = getOption("tz"))
Sys.getenv("TZ")
Sys.getenv("TZ")
?as.POSIXct
Sys.timezone
Sys.timezone()
Sys.getenv("TZ", names = FALSE)
Sys.getenv("TZ", names = T)
Sys.getenv("TZ", names = TRUE)
Sys.getenv("TZ")
Sys.getenv()
Sys.getenv("TZ")
as.POSIXlt.POSIXct
as.POSIXlt.POSIXct()
x <- as.POSIXct("2012-08-06 15:32:00", tz = "Etc/GMT-10")
Sys.env
Sys.env()
Sys.Date()
Sys.env()
Sys.getenv()
Sys.getenv(TZ = "America/New_York")
